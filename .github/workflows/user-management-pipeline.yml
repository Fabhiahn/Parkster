name: User Management pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'microservices/user-management-service/**'
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PAT }}
  KUBE_TOKEN: ${{ secrets.KUBE_CONFIG }}
  KUBE_API_SERVER: ${{ secrets.K8S_SERVER }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push user-management-service image
        working-directory: microservices/user-management-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/parkster-login:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/parkster-login:latest ${{ secrets.DOCKER_USERNAME }}/parkster-login:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/parkster-login:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/parkster-login:${{ github.sha }}

      - name: Set up kubeconfig
        run: |
          kubectl config set-credentials github-actions --token="${{ secrets.KUBE_CONFIG }}"
          kubectl config set-cluster my-cluster --server="${{ secrets.K8S_SERVER }}" --insecure-skip-tls-verify
          kubectl config set-context github-actions --cluster=my-cluster --user=github-actions
          kubectl config use-context github-actions

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy using Helm
        working-directory: "helm charts"
        run: |
          helm upgrade login ./users \
            --values users/prod-values.yaml \
            --set image.tag=${{ github.sha }} \
            --set image.pullPolicy=Always
      
