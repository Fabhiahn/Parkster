apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-user-manager
  labels:
    app: user-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: user-manager
  template:
    metadata:
      labels:
        app: user-manager
    spec:
      containers:
      - name: user-manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        env:
        - name: SQLALCHEMY_DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.env.secrets.SQLALCHEMY_DATABASE_URI.name }}
              key: {{ .Values.env.secrets.SQLALCHEMY_DATABASE_URI.key }}
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.env.secrets.JWT_SECRET_KEY.name }}
              key: {{ .Values.env.secrets.JWT_SECRET_KEY.key }}
